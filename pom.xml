<?xml version="1.0" encoding="UTF-8"?>
<project xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns="http://maven.apache.org/POM/4.0.0"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<artifactId>learning-series-example-portlet</artifactId>
	<groupId>life.qbic</groupId>
	<version>1.0.0</version>
	<name>learning-series-example-portlet</name>
	<packaging>war</packaging>
	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<maven.compiler.source>1.8</maven.compiler.source>
		<maven.compiler.target>1.8</maven.compiler.target>
		<groovy.version>3.0.8</groovy.version>
		<log4j.version>2.17.1</log4j.version>
		<vaadin.version>8.14.1</vaadin.version>
		<vaadin.plugin.version>8.14.0</vaadin.plugin.version>
	</properties>
	<pluginRepositories>
	<pluginRepository>
		<id>maven-central-plugins</id>
		<url>
			https://repo.maven.apache.org/maven2
		</url>
	</pluginRepository>
	</pluginRepositories>
	<repositories>
	<repository>
		<releases>
			<enabled>true</enabled>
			<updatePolicy>always</updatePolicy>
			<checksumPolicy>fail</checksumPolicy>
		</releases>
		<snapshots>
			<enabled>false</enabled>
		</snapshots>
		<id>maven-central</id>
		<name>Maven central</name>
		<url>https://repo.maven.apache.org/maven2</url>
	</repository>
		<repository>
			<id>vaadin-addons</id>
			<url>http://maven.vaadin.com/vaadin-addons</url>
		</repository>
	</repositories>
	<dependencyManagement>
	<dependencies>
	<dependency>
		<groupId>com.vaadin</groupId>
		<artifactId>vaadin-bom</artifactId>
		<version>${vaadin.version}</version>
		<type>pom</type>
		<scope>import</scope>
	</dependency>
	</dependencies>
	</dependencyManagement>
	<dependencies>
		<dependency>
			<groupId>javax.servlet</groupId>
			<artifactId>servlet-api</artifactId>
			<version>2.5</version>
		</dependency>
		<!-- Vaadin dependencies -->
		<dependency>
			<groupId>com.vaadin</groupId>
			<artifactId>vaadin-server</artifactId>
			<scope>compile</scope>
		</dependency>
		<dependency>
			<groupId>com.vaadin</groupId>
			<artifactId>vaadin-themes</artifactId>
			<scope>compile</scope>
		</dependency>
		<dependency>
			<groupId>com.vaadin</groupId>
			<artifactId>vaadin-client-compiled</artifactId>
			<scope>compile</scope>
		</dependency>
		<!-- javax dependencies -->
		<dependency>
			<groupId>javax.servlet</groupId>
			<artifactId>javax.servlet-api</artifactId>
			<version>3.0.1</version>
		</dependency>
		<dependency>
			<groupId>org.apache.maven.plugins</groupId>
			<artifactId>maven-resources-plugin</artifactId>
			<version>3.2.0</version>
			<type>maven-plugin</type>
		</dependency>
	</dependencies>
	<build>
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-war-plugin</artifactId>
				<version>3.3.1</version>
				<configuration>
					<failOnMissingWebXml>false</failOnMissingWebXml>
					<!-- Exclude an unnecessary file generated by the GWT compiler. -->
					<packagingExcludes>WEB-INF/classes/VAADIN/widgetsets/WEB-INF/**</packagingExcludes>
					<webResources>
						<resource>
							<filtering>true</filtering>
							<directory>src/main/resources</directory>
							<targetPath>WEB-INF/classes</targetPath>
						</resource>
						<resource>
							<filtering>true</filtering>
							<directory>src/main/webapp/WEB-INF</directory>
							<targetPath>WEB-INF</targetPath>
						</resource>
					</webResources>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-clean-plugin</artifactId>
				<version>3.1.0</version>
				<!-- Clean up also any pre-compiled themes -->
				<configuration>
					<filesets>
						<fileset>
							<directory>src/main/webapp/VAADIN/themes</directory>
							<includes>
								<include>**/styles.css</include>
								<include>**/styles.scss.cache</include>
							</includes>
						</fileset>
					</filesets>
				</configuration>
			</plugin>
			<plugin>
				<groupId>com.vaadin</groupId>
				<artifactId>vaadin-maven-plugin</artifactId>
				<version>${vaadin.plugin.version}</version>
				<executions>
					<execution>
						<goals>
							<goal>update-theme</goal>
							<goal>update-widgetset</goal>
							<goal>compile</goal>
							<goal>compile-theme</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.eclipse.jetty</groupId>
				<artifactId>jetty-maven-plugin</artifactId>
				<version>9.4.32.v20200930</version>
				<configuration>
					<!-- Jetty's hot deploy enabled has been enabled by default! If you
            want to disable jetty's hot deploy feature, activate the 'jetty-cold-deploy'
            profile via the command line: mvn -P jetty-cold-deploy Or, alternatively,
            you can change your settings.xml to permanently activate this profile. For
            more information on how to permanently activate a property, see: https://maven.apache.org/settings.html#Profiles
            For more information about the origin of this long comment, see: https://github.com/qbicsoftware/parent-poms/issues/4 -->
					<scanIntervalSeconds>2</scanIntervalSeconds>
					<useProvidedScope>true</useProvidedScope>
					<stopPort>8005</stopPort>
					<stopKey>STOP</stopKey>
				</configuration>
				<executions>
					<execution>
						<id>start-jetty</id>
						<phase>pre-integration-test</phase>
						<goals>
							<goal>start</goal>
						</goals>
						<configuration>
							<scanIntervalSeconds>2</scanIntervalSeconds>
						</configuration>
					</execution>
					<execution>
						<id>stop-jetty</id>
						<phase>post-integration-test</phase>
						<goals>
							<goal>stop</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
		</plugins>
	</build>
</project>
